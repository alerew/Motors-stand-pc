<Window x:Class="Motors_stand.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Motors_stand.Views"
        mc:Ignorable="d"
        xmlns:vm ="clr-namespace:Motors_stand.ViewModel"
        xmlns:oxy="http://oxyplot.org/wpf"
        xmlns:cmd="clr-namespace:Motors_stand.Infrastructure.Commands"
        Title="Motors stand" Height="780" Width="880" WindowStartupLocation="CenterScreen" ResizeMode="CanResize" Style="{StaticResource MainWindow}" Cursor="Arrow">

    <Window.DataContext>
        <vm:MainWindowVM/>
    </Window.DataContext>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="180"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Background="#131313">
            <ComboBox ItemsSource="{Binding PortNames}" SelectedItem="{Binding SelectedPort}" SelectedIndex="0"></ComboBox>
            <Button Content="Обновить" Command="{Binding RefreshPortCommand}" Style="{StaticResource btn}"/>
            <Button>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource btn}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsOpen}" Value="True">
                                <Setter Property="Content" Value="Отключиться"/>
                                <Setter Property="Command" Value="{Binding ClosePortCommand}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsOpen}" Value="False">
                                <Setter Property="Content" Value="Подключиться"/>
                                <Setter Property="Command" Value="{Binding OpenPortCommand}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="Сбросить" Command="{Binding TareCommand}" Style="{StaticResource btn}"/>
            <Button Command="{Binding OnOffMotorCommand}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource btn}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Motor}" Value="True">
                                <Setter Property="Content" Value="Выключить мотор"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Motor}" Value="False">
                                <Setter Property="Content" Value="Включить мотор"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Command="{Binding AutoModeCommand}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource btn}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Mode}" Value="True">
                                <Setter Property="Content" Value="Выключить автоизмерение"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Mode}" Value="False">
                                <Setter Property="Content" Value="Включить автоизмерение"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Slider Value="{Binding MotorValue}" HorizontalAlignment="Left" Height="18" Margin="10,10,0,0" VerticalAlignment="Top" Width="160" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Maximum="180"/>


            <Button Content="{Binding Thrust}" Style="{StaticResource value}" Command="{Binding VisibleCommand}" CommandParameter="Thrust"/>
            <Button Content="{Binding Amperage}" Style="{StaticResource value}" Command="{Binding VisibleCommand}" CommandParameter="Amperage"/>
            <Button Content="{Binding Voltage}" Style="{StaticResource value}" Command="{Binding VisibleCommand}" CommandParameter="Voltage"/>
            <Button Content="{Binding Power}" Style="{StaticResource value}" Command="{Binding VisibleCommand}" CommandParameter="Power"/>
            <Button Content="{Binding Vibration}" Style="{StaticResource value}" Command="{Binding VisibleCommand}" CommandParameter="Vibration"/>
            <Button Content="{Binding Temp}" Style="{StaticResource value}" Command="{Binding VisibleCommand}" CommandParameter="Temp"/>
            <Button Content="{Binding RPM}" Style="{StaticResource value}" Command="{Binding VisibleCommand}" CommandParameter="RPM"/>
            <Button Content="{Binding Efficiency}" Style="{StaticResource value}" Command="{Binding VisibleCommand}" CommandParameter="Efficiency"/>
            <Button Content="{Binding Volume}" Style="{StaticResource value}" Command="{Binding VisibleCommand}" CommandParameter="Volume"/>
            <Button Content="Настройки" Style="{StaticResource btn}">
                <Button.Command>
                    <cmd:SettingsComand/>
                </Button.Command>
            </Button>
            <Button Content="Сохранить измерения" Style="{StaticResource btn}" Command="{Binding SaveCommand}"/>
        </StackPanel>
        <StatusBar VerticalAlignment="Bottom" Grid.Column="0" Background="#0a0a0a">
            <StatusBarItem>
                <TextBlock Text="{Binding Message}" Height="12" FontSize="10" Foreground="#808080" Margin="5,0,0,5"/>
            </StatusBarItem>
        </StatusBar>
        <oxy:PlotView Grid.Column="1" Model="{Binding Plot}" Foreground="White" Background="#191919" PanCursor="Arrow" ZoomHorizontalCursor="Arrow" ZoomRectangleCursor="Arrow" ZoomVerticalCursor="Arrow"/>
    </Grid>
</Window>
